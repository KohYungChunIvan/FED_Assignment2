/*DONE BY : Koh Yung Chun Ivan, S10262491*/

@import url( 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap');
/* Resetting default margin, padding, and box-sizing for all elements */
* {
    margin: 0; /* Remove default margin */
    padding: 0; /* Remove default padding */
    box-sizing: border-box; /* Ensures that padding and border are included in element's total width and height */
}
/* Styling for an element with the class 'element' */
.element {
    -webkit-transform: rotate(45deg); /* Rotate the element 45 degrees for webkit browsers (Safari, Chrome) */
    -moz-transform: rotate(45deg); /* Rotate the element 45 degrees for Mozilla browsers (Firefox) */
    transform: rotate(45deg); /* Rotate the element 45 degrees for all other browsers */
}
/* Styling for the body of the page */
body {
    background: rgba(241, 218, 230, 0.3); /* Background color with alpha (transparency) value */
    background-blend-mode: multiply; /* Blend mode for background */
    background-position: center; /* Position the background image at the center */
    background-size: cover; /* Scale the background image to cover the entire viewport */
    background-repeat: no-repeat; /* Prevent background image from repeating */
    font-family: 'Poppins', sans-serif; /* Specify the font family for text */
    margin: 0; /* Remove default margin for the body */
    padding: 0; /* Remove default padding for the body */
    align-items: center; /* Center content vertically */
    justify-content: center; /* Center content horizontally */
}

/* Styling for the container holding the categories */
.categories-container {
    text-align: center; /* Center-align text within the container */
    font-family: Arial, sans-serif; /* Specify the font family for text */
    margin-top: 80px; /* Add top margin of 80 pixels */
}

/* Styling for the flex container holding category elements */
.categories-flex-container {
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Arrange children in a column */
    align-items: center; /* Center-align children horizontally */
}


/* Styling for the top row within the category container */
.top-row {
    display: flex; /* Use flexbox for layout */
    justify-content: space-around; /* Distribute space evenly between children */
    width: 90%; /* Set the width to 90% of the container */
    position: relative; /* Set the position to relative to position the pseudo-element */
    padding-bottom: 10px; /* Add some padding to give space for the line */
}

/* Styles for the individual category blocks */
.category {
    display: inline-block; /* Display as an inline block */
    margin: 20px; /* Add 20 pixels of margin around each category block */
    position: relative; /* Set the position to relative */
    text-align: center; /* Center-align text within the category block */
    vertical-align: top; /* Align the category blocks vertically at the top */
}

/* Adjusted styles for the anchor and images within category blocks */
.category a {
    position: relative; /* Set the position to relative */
    display: block; /* Display as a block element */
    width: 380px; /* Set a fixed width for the anchor */
    height: 370px; /* Set a fixed height for the anchor */
    border-radius: 50%; /* Apply a circular border radius to create a circular shape */
    overflow: hidden; /* Hide overflowing content within the circular shape */
    margin: 0 auto; /* Center-align the anchor horizontally */
    overflow: visible; /* Ensure shadow outside the circular shape is visible */
}

/* Style for images within category blocks */
.category img {
    width: 100%; /* Set the width of the image to 100% of its container */
    height: 100%; /* Set the height of the image to 100% of its container */
    border-radius: 50%; /* Apply a circular border radius to the image */
    transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out, box-shadow 0.4s ease-in-out; /* Apply transitions for opacity, transform, and box-shadow */
    position: absolute; /* Position the image absolutely within its container */
    top: 0; /* Position the image at the top of its container */
    left: 0; /* Position the image at the left of its container */
    border: 6px solid #e4dfdf; /* Add a solid border around the image*/
    object-fit: cover; /* Scale and crop the image to cover its container */
}


/* Hover effect for images within category blocks */
.category:hover img {
    box-shadow: 0 0 30px 15px rgba(61, 85, 61, 0.3); /* Increase the glow effect on hover */
    transform: scale(1.1); /* Slightly scale up the image on hover */
    opacity: 0.9; /* Reduce opacity on hover */
}


/* Initially hide the hover image */
.category .image-hover {
    opacity: 0; /* Set opacity to 0 initially */
    z-index: 1; /* Set z-index to 1 to be below the normal image */
}

/* Show the hover image and hide the normal image on hover */
.category:hover .image-normal {
    opacity: 0; /* Hide the normal image on hover */
}

/* Show the hover image and bring it to the front on hover */
.category:hover .image-hover {
    opacity: 1; /* Make the hover image visible on hover */
    z-index: 2; /* Bring the hover image to the front by increasing z-index */
}

/* Styles for the category label */
.category h4 {
    position: absolute; /* Position the label absolutely within its container */
    width: 100%; /* Set the width of the label to 100% of its container */
    left: 0; /* Position the label at the left of its container */
    bottom: -50px; /* Move the label 50 pixels below the bottom of its container */
    text-align: center; /* Center-align text within the label */
    color: #000; /* Set the text color to black */
    font-size: 20px; /* Set the font size to 20 pixels */
    z-index: 3; /* Ensure the label is above all images */
}

/* Style for the category label container */
.category-label {
    display: none; /* Hide labels initially */
}

/* Show the label on hover with updated styles */
.category:hover img {
    opacity: 0.9; /* Slightly reduce opacity of the image on hover */
}

.category:hover .category-label {
    display: block; /* Display the label on hover */
    font-size: 28px; /* Increase font size on hover */
    position: absolute; /* Position the label absolutely within its container */
    top: 50%; /* Position the label vertically at the center */
    left: 50%; /* Position the label horizontally at the center */
    transform: translate(-50%, -50%); /* Center-align the label precisely */
    color: #000; /* Set the text color to black */
}

/* Additional style for category blocks with bottom margin */
.bottom-category {
    margin-bottom: 50px; /* Add 50 pixels of margin at the bottom of these category blocks */
}

/* Style for the margin below carousel captions */
.carousel-caption {
    margin-bottom: 110px; /* Add a bottom margin of 110 pixels to the carousel captions */
}

/* Style for carousel control buttons (next and previous) */
.carousel-control-next,
.carousel-control-prev {
    z-index: 1; /* Set a higher z-index to ensure these buttons are above other elements */
}

/* Style for elements with class 'display-2' */
.display-2 {
    font-size: 60px; /* Set the font size to 60 pixels for elements with this class */
}

/* Style for the container of cards */
.card-container {
    font-family: 'Poppins', sans-serif; /* Specify the font family for text */
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Arrange children in a column */
    align-items: center; /* Center-align children horizontally */
    justify-content: space-between; /* Distribute space evenly between children vertically */
}


/* Style for individual cards */
.card {
    position: relative; /* Set the position to relative */
    width: 400px; /* Set a fixed width for the card */
    height: 550px; /* Set a fixed height for the card */
    border-radius: 10px; /* Apply a rounded border */
    overflow: hidden; /* Hide overflowing content within the card */
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Apply a shadow effect */
    transition: transform 0.5s ease; /* Apply a transition effect on hover */
}

/* Style for images within cards */
.card img {
    width: 100%; /* Set the width of the image to 100% of its container */
    display: block; /* Display the image as a block element */
    transition: transform 0.5s ease; /* Apply a transition effect on hover */
}

/* Hover effect for images within cards */
.card:hover img {
    transform: scale(1.1); /* Slightly zoom in the image on hover */
}

/* Styles for a card's information overlay */
.card-info {
    position: absolute; /* Position the overlay absolutely within its container */
    top: 0; /* Anchor it to the top of the container */
    left: 0; /* Anchor it to the left of the container */
    right: 0; /* Anchor it to the right of the container */
    bottom: 0; /* Anchor it to the bottom of the container */
    background: transparent; /* Set a transparent background */
    color: rgb(255, 255, 255); /* Set the text color to white */
    visibility: hidden; /* Initially hide the overlay */
    opacity: 0; /* Initially make the overlay fully transparent */
    transition: visibility 0s, opacity 0.5s ease; /* Apply a transition for visibility and opacity */
    display: flex; /* Use flexbox for layout within the overlay */
    flex-direction: column; /* Arrange children in a column */
    justify-content: end; /* Align content to the bottom of the overlay */
    align-items: center; /* Center-align content horizontally */
    text-align: center; /* Center-align text within the overlay */
}

/* Show the card-info overlay on hover */
.card:hover .card-info {
    visibility: visible; /* Make the overlay visible on hover */
    opacity: 1; /* Fade in the overlay on hover */
}

/* Style for the card title */
.card-title {
    margin: 0; /* Remove default margin */
    font-size: 18px; /* Set font size to 18 pixels */
    font-weight: bold; /* Apply bold font weight */
}

/* Style for the card text */
.card-text {
    font-size: 14px; /* Set font size to 14 pixels */
    margin-top: 10px; /* Add top margin of 10 pixels */
}

/* Style for the card button */
.card-button {
    background-color: #819c8e; /* Set the background color */
    color: #ffffff; /* Set the text color to white */
    text-decoration: none; /* Remove underlines from links */
    padding: 10px 20px; /* Add padding around the button */
    border-radius: 5px; /* Apply rounded corners */
    display: inline-block; /* Display as an inline block element */
    margin-top: 15px; /* Add top margin of 15 pixels */
    margin-bottom: 60px; /* Add bottom margin of 60 pixels */
}

/* Styles for an image gallery container */
.image-gallery {
    display: flex; /* Use flexbox for layout */
    flex-wrap: wrap; /* Allow images to wrap onto the next line if necessary */
    justify-content: center; /* Center-align images horizontally */
    gap: 20px; /* Add a 20-pixel gap between images, adjust as needed */
}

/* Styles for individual image containers */
.image-container {
    width: 150px; /* Set a fixed width for each image container */
    height: 150px; /* Set a fixed height for each image container */
    border-radius: 50%; /* Apply a circular border radius */
    overflow: hidden; /* Hide overflowing content within the circular container */
    position: relative; /* Position the image container relatively for absolute centering */
    display: flex; /* Use flexbox for layout within the container */
    justify-content: center; /* Center-align content horizontally */
    align-items: center; /* Center-align content vertically */
}

/* Styles for images within image containers */
.image-container img {
    width: 100%; /* Set the width of the image to 100% of its container */
    height: auto; /* Maintain the aspect ratio of the image */
    border-radius: 50%; /* Make the image round */
    transition: transform 0.5s ease-in-out; /* Apply a transition for zooming effect on hover */
}

/* Zoom effect for images on hover */
.image-container:hover img {
    transform: scale(1.1); /* Slightly zoom in the image on hover */
}

/* Specific styles for the bottom image to center it */
.image-container.bottom {
    order: 3; /* Makes sure this container goes to the next row in flexbox */
    flex: 0 0 100%; /* Takes full width to center the image */
}

/* Styles for the badge within a product inner box */
.product-inner-box .onsale .badge {
    background: #000; /* Set the background color of the badge to black */
    font-size: 12px; /* Set the font size of the badge to 12 pixels */
    padding: 5px 14px; /* Add padding to the badge */
    top: 0px; /* Position the badge at the top of its container */
    position: absolute; /* Position the badge absolutely */
}

/* Style for the before pseudo-element of the .badge within .onsale in .product-inner-box */
.product-inner-box .onsale .badge:before {
    border-width: 10px 0px 0px 10px; /* Set border width for creating a triangle */
    border-color: transparent transparent transparent #000; /* Set border colors to create a triangle */
    content: ""; /* Empty content for the pseudo-element */
    position: absolute; /* Position the pseudo-element absolutely */
    right: -8px; /* Position it to the right of the badge */
    width: 0; /* Set the initial width to 0 */
    bottom: 0; /* Position it at the bottom of the badge */
    border-style: solid; /* Use a solid border style to create a triangle */
}

/* Style for the after pseudo-element of the .badge within .onsale in .product-inner-box */
.product-inner-box .onsale .badge::after {
    border-width: 10px 8px 0px 10px; /* Set border width for creating a triangle */
    border-color: #000 transparent transparent; /* Set border colors to create a triangle */
    content: ""; /* Empty content for the pseudo-element */
    position: absolute; /* Position the pseudo-element absolutely */
    right: -8px; /* Position it to the right of the badge */
    width: 0; /* Set the initial width to 0 */
    top: 0; /* Position it at the top of the badge */
    border-style: solid; /* Use a solid border style to create a triangle */
}

/* Style for images within .product-inner-box */
.product-inner-box img {
    box-shadow: 0 33px 61px -29px rgb(0 0 0 / 26%); /* Apply a box shadow to the image */
    height: 350px; /* Set the height of the image to 350 pixels */
    width: 440px; /* Set the width of the image to 440 pixels */
    object-fit: cover; /* Scale and crop the image to cover its container */
}

/* Style for the .icons within .product-box with class .is-hover */
.product-box.is-hover .icons {
    transform: rotate(-3%); /* Apply a slight counter-clockwise rotation */
    top: 3%; /* Adjust the top position */
    opacity: 1; /* Make the icons fully visible */
}

#content{
    display: none;
}
#loading-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #fff; /* You can set any background color or background image */
    justify-content: center;
    display: flex;
    align-items: center;
    z-index: 9999;
}

/* Style for the class .rewards-header */
.rewards-header {
    /* Add a bottom border with thickness of 2.25px and color black */
    border-bottom: 2.25px solid black;
    /* Add padding at the bottom to create space between the text and the underline */
    padding-bottom: 5px;
}

/* Style for cart buttons with class .cart-btn */
.cart-btn {
    position: absolute; /* Position the button absolutely */
    bottom: 20px; /* Position it 20 pixels from the bottom */
    text-align: center; /* Center-align text within the button */
    width: 100%; /* Set the button width to 100% of its container */
    opacity: 0; /* Initially make the button transparent */
    transition: all 0.2s ease-in-out, transform 0.2s ease-in-out, opacity 0.2s ease-in-out; /* Apply transitions for smoother effects */
}

/* Style for game buttons with class .game-btn */
.game-btn {
    position: absolute; /* Position the button absolutely */
    bottom: 20px; /* Position it 20 pixels from the bottom */
    text-align: center; /* Center-align text within the button */
    width: 100%; /* Set the button width to 100% of its container */
    opacity: 0; /* Initially make the button transparent */
    pointer-events: none; /* Prevents interaction when not visible */
}

/* Show game buttons on hover or when the product box is in a hover state */
.product-box:hover .game-btn,
.product-box.is-hover .game-btn {
    opacity: 1; /* Make the button visible */
    pointer-events: auto; /* Allow interaction when visible */
}

/* Remove the hover effect from the button and maintain styling */
.btn-white,
.btn-white:hover, /* Add hover state here to ensure it doesn't change on hover */
.game-btn:hover .btn-white { /* Target the button within .game-btn specifically on hover */
    background-color: #c2a8a8; /* Keep the button pink background color */
    color: #fff; /* Keep the text color white */
    /* No change to opacity or background on hover */
}

/* Additional style for svg within .game-btn to ensure it doesn't change color on hover */
.game-btn:hover svg {
    fill: #fff; /* Adjust the color as needed, this example keeps it white */
}

/* Style for buttons with class .btn-white */
.btn-white {
    background-color: #c2a8a8; /* Set the background color to pink */
    color: #fff; /* Set the text color to white */
}

/* Show cart button when product box is in a hover state */
.product-box.is-hover .cart-btn {
    opacity: 1; /* Make the cart button visible */
}



/* Set color to black for navbar brand, offcanvas body, and nav links */
.navbar-brand,
.offcanvas-body,
.nav-link {
    color: black !important; /* Set the color to black using !important to override any other styles */
}



/* Style for elements with class .c-item */
.c-item {
    height: 660px; /* Set a fixed height for elements */
}

/* Style for images within .c-item elements */
.c-img {
    height: 100%; /* Set the height of the image to 100% of its container */
    object-fit: cover; /* Scale and crop the image to cover its container */
    filter: brightness(0.3); /* Apply a brightness filter to darken the image */
}

/* Style for h6 elements within elements with class .words */
.words h6 {
    line-height: 2.5; /* Set the line height for h6 elements */
}

/* Style for h2 elements within elements with class .words */
.words h2 {
    line-height: 1.8; /* Set the line height for h2 elements */
}

/* Style for the custom search container */
.custom-search {
    position: relative; /* Use relative positioning to position the search button inside the container */
    width: 300px; /* Set a fixed width for the search container */
    margin-left: auto; /* Center the search container horizontally */
    margin-right: auto; /* Center the search container horizontally */
    display: block; /* Ensure the container is displayed as a block-level element */
}

.custom-search-input {
    width: 100%; /* Make the input field take up the entire width of its parent container */
    border: 1px solid #ccc; /* Set the border color and thickness */
    border-radius: 100px; /* Round the corners of the input field for a pill shape */
    padding: 10px 100px 10px 20px; /* Set padding to make text inside the input field not touch the edges and leave space for the button */
    line-height: 1; /* Set the line height to ensure text is vertically centered */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
    outline: none; /* Remove the default focus outline to customize styling */
}

.custom-search-botton {
    position: absolute; /* Position the button absolutely within its relatively positioned parent */
    right: 3px; /* Position the button close to the right edge of its parent */
    top: 3px; /* Position the button close to the top edge of its parent */
    bottom: 3px; /* Ensure the button is vertically centered within its parent */
    border: 0; /* Remove any default border */
    background: #d1095e; /* Set the background color of the button */
    color: #fff; /* Set the text color to white for contrast */
    outline: none; /* Remove the default focus outline */
    margin: 0; /* Remove any default margin */
    padding: 0 10px; /* Add horizontal padding but no vertical padding */
    border-radius: 100px; /* Round the corners of the button for a pill shape */
    z-index: 2; /* Ensure the button is layered above other elements */
}

/* Style for all video elements */
video {
    width: 100%; /* Set video width to 100% of its container */
    height: 650px; /* Set a fixed height to maintain aspect ratio */
    display: block; /* Remove any extra space below video */
}

/* Style for the footer */
footer {
    font-family: 'Poppins', sans-serif; /* Set the font family for the footer text */
    font-size: 14px; /* Set the font size for the footer text */
    background-color: #819c8e; /* Set the background color of the footer */
    color: #fff; /* Set the text color to white */
    padding: 10px; /* Add padding to the footer */
    text-align: center; /* Center-align text in the footer */
    max-width: 0 auto; /* Limit the max width of the footer */
    margin: 0 auto; /* Center the footer horizontally */
}

/* Style for social icons within the footer */
.social-icons img {
    max-width: 30px; /* Set the maximum width for social icons */
    height: auto; /* Set height to auto for proportional scaling */
}

/* Style for all rows */
.row {
    justify-content: center; /* Center-align contents horizontally within the row */
    margin: 20px; /* Add margin around the row */
}

/* Style for the cart popup */
.cart-popup {
    position: fixed; /* Fixed positioning for overlay effect */
    z-index: 1050; /* Set a high z-index to ensure it appears above other elements */
    top: 0; /* Align the top of the window */
    right: -500px; /* Initial position, adjust as needed */
    width: 480px; /* Adjust the width of the cart */
    height: 100%; /* Set height to 100% of the viewport */
    background-color: #0c0c0c; /* Set background color of the cart */
    transition: right 0.5s ease; /* Add transition for smooth sliding */
    overflow-y: auto; /* Allow vertical scrolling if content overflows */
    color: #fff; /* Set text color to white */
}

/* Style for the close button of the cart */
.close-cart {
    position: absolute; /* Absolute positioning for accurate placement */
    top: 21px; /* Set top position */
    right: 22px; /* Set right position */
    cursor: pointer; /* Change cursor to pointer on hover */
    color: #ffffff; /* White text color */
    font-size: 20px; /* Set font size */
}

/* Style for the title of the shopping cart */
.shopping-cart-title {
    font-family: 'Dancing Script', cursive; /* Use the specified font */
    font-size: 30px; /* Set font size */
    font-weight: bold; /* Set font weight to bold */
    color: #ffffff; /* White text color */
    margin-top: 25px; /* Adjust the top margin */
    padding-left: 157px; /* Adjust the left padding */
    margin-bottom: 40px; /* Adjust the bottom margin */
}

/* Styles for the title when the shopping cart is empty */
.empty-cart-title {
    font-family: 'Dancing Script', cursive; /* Use the specified font */
    font-size: 25px; /* Set font size */
    font-weight: bold; /* Set font weight to bold */
    color: #ffffff; /* White text color */
    margin-top: 250px; /* Adjust the top margin */
    padding-left: 137px; /* Adjust the left padding */
}


/* Style for the cart item count element */
#cart-item-count {
    position: absolute; /* Position the element absolutely */
    top: 0.1; /* Set top position (fix this value to a valid number, e.g., top: 0.1rem) */
    right: 19.9vw; /* Set right position (fix this value to a valid number, e.g., right: 19.9vw) */
    background-color: rgb(0, 0, 0); /* Set background color */
    color: white; /* Set text color to white */
    border-radius: 50%; /* Apply a border-radius for a circular shape */
    padding: 1.5px 4.5px; /* Add padding to the element */
    font-size: 7.5px; /* Set font size */
    transform: translate(50%, -50%); /* Center-align the element */
}

/* Style for the cart item count element with the .user-logged-in class */
#cart-item-count.user-logged-in {
    right: 8.8vw; /* Adjusted position when the user is logged in */
}

/* Style for images within elements with class .cart-item */
.cart-item img {
    width: 110px; /* Adjust the width of the cart item images as needed */
    height: 100px; /* Adjust the height of the cart item images as needed */
    margin-right: 30px; /* Adjust the spacing between the image and other details */
    border-radius: 5px; /* Add border-radius for rounded corners if desired */
    object-fit: cover; /* Scale and crop the image to cover its container */
}

/* Style for the text content within the cart popup */
.cart-popup-content {
    color: rgb(236, 231, 231); /* Change the text color of the cart popup content */
}

/* Style the product details container */
.product-details {
    flex-grow: 1; /* Allow the container to grow within its parent */
    display: flex; /* Display as a flex container */
    flex-direction: column; /* Stack name and price vertically */
    align-items: flex-start; /* Align name and price to the left */
    justify-content: center; /* Vertically center name and price */
}
  
/* Style the product name within .product-details */
.product-details h6 {
    margin: 0; /* Remove margin to control spacing */
    font-size: 16px; /* Set font size for the product name */
}
  
/* Style the product price within .product-details */
.product-details span {
    font-size: 16px; /* Set font size for the product price */
}

/* Style for elements with class .cart-item */
.cart-item {
    display: flex; /* Display as a flex container */
    padding: 15px; /* Add padding around the cart item */
    margin-bottom: 10px; /* Add margin to separate cart items */
}

/* Style the delete button (cross) within .cart-item */
.cart-delete-button {
    font-size: 18px; /* Set font size for the delete button */
    color: red; /* Set text color to red */
    background: none; /* Remove background */
    border: none; /* Remove border */
    cursor: pointer; /* Change cursor to pointer on hover */
    padding: 10px; /* Add padding to the button */
    margin-right: 20px; /* Add margin to the right to separate from other elements */
}

/* Style the login container with class .box-area */
.box-area {
    width: 930px; /* Set a fixed width for the login container */
}

/* Style the right box with class .right-box */
.right-box {
    padding: 40px 30px 40px 40px; /* Adjust padding for the right box */
}

/* Style placeholder text */
::placeholder {
    font-size: 16px; /* Set font size for placeholder text */
}

/* Apply a rounded border with class .rounded-4 */
.rounded-4 {
    border-radius: 20px; /* Set border radius for rounded corners */
}

/* Apply a larger rounded border with class .rounded-5 */
.rounded-5 {
    border-radius: 30px; /* Set a larger border radius for rounded corners */
}


/* Spin the Wheel */
/* Style for the container that spins the wheel */
.spinbody {
    display: flex; /* Display as a flex container */
    justify-content: center; /* Center-align contents horizontally */
    align-items: center; /* Center-align contents vertically */
    min-height: 100vh; /* Set a minimum height of the viewport */
    background-color: #363232; /* Background color */
    background-image: url(photos/game1bg.jpg); /* Background image */
    background-size: cover; /* Scale and cover the background */
}

/* Style for the text within the spinning container */
.spin-text {
    position: absolute; /* Absolute positioning */
    left: 25%; /* Center the text horizontally */
    bottom: 110%; /* Position text below the spinning container */
    font-size: 24px; /* Adjust the font size as needed */
    color: #fff; /* Text color */
}

/* Style for the spinning container itself */
.spin-container {
    position: relative; /* Relative positioning for children */
    width: 400px; /* Set a fixed width for the container */
    height: 400px; /* Set a fixed height for the container */
    display: flex; /* Display as a flex container */
    justify-content: center; /* Center-align contents horizontally */
    align-items: center; /* Center-align contents vertically */
}

/* Style for the spinning button */
.spin-container .spinBtn {
    position: absolute; /* Absolute positioning within the container */
    width: 60px; /* Set a fixed width for the button */
    height: 60px; /* Set a fixed height for the button */
    background: #fff; /* Background color of the button */
    border-radius: 50%; /* Apply a border-radius for a circular shape */
    z-index: 10; /* Set a higher z-index to ensure it's above other elements */
    display: flex; /* Display as a flex container */
    justify-content: center; /* Center-align contents horizontally */
    align-items: center; /* Center-align contents vertically */
    text-transform: uppercase; /* Transform text to uppercase */
    font-weight: 600; /* Set font weight */
    color: #332f2f; /* Text color */
    letter-spacing: 0.1em; /* Adjust letter spacing */
    border: 4px solid rgba(0,0,0,0.75); /* Border styling */
    cursor: pointer; /* Change cursor to pointer on hover */
    user-select: none; /* Prevent text selection */
}

/* Style for a decorative element before the spinning button */
.spin-container .spinBtn::before {
    background: #fff; /* Background color of the element */
    content: ''; /* Empty content for decorative element */
    position: absolute; /* Absolute positioning within the container */
    width: 20px; /* Set a fixed width for the element */
    height: 30px; /* Set a fixed height for the element */
    top: -29px; /* Position the element above the button */
    clip-path: polygon(50% 0%, 15% 100%, 85% 100%); /* Define a custom shape using clip-path */
}

/* Style for the spinning wheel container */
.spin-container .wheel {
    overflow: hidden; /* Hide overflowing content */
    position: absolute; /* Absolute positioning within the container */
    top: 0; /* Position at the top of the container */
    left: 0; /* Position at the left of the container */
    width: 100%; /* Set width to 100% of the container */
    height: 100%; /* Set height to 100% of the container */
    background: #333131; /* Background color of the wheel */
    border-radius: 50%; /* Apply a border-radius for a circular shape */
    box-shadow: 0 0 0 5px #716868, 0 0 0 15px #fff, 0 0 0 18px #151515; /* Add box shadow for styling */
}

/* Style for each number section within the spinning wheel */
.spin-container .wheel .number {
    display: flex; /* Display as a flex container */
    position: absolute; /* Absolute positioning within the wheel */
    justify-content: center; /* Center-align contents horizontally */
    align-items: center; /* Center-align contents vertically */
    width: 50%; /* Set width to 50% of the wheel */
    height: 50%; /* Set height to 50% of the wheel */
    background: var(--clr); /* Background color, use a variable for customization */
    transform-origin: bottom right; /* Set the transform origin */
    transform: rotate(calc(45deg * var(--i))); /* Rotate each number section */
    clip-path: polygon(0 0, 60% 0, 100% 100%, 0 60%); /* Define a custom shape using clip-path */
    user-select: none; /* Prevent text selection */
    cursor: pointer; /* Change cursor to pointer on hover */
}

/* Style for the text within each number section */
.spin-container .wheel .number span {
    position: relative; /* Relative positioning */
    transform: rotate(45deg); /* Rotate the text to match the section */
    font-size: 1.8em; /* Set font size for the text */
    font-weight: bolder; /* Set font weight */
    color: #fff; /* Text color */
    text-shadow: 1px 3px 1px rgba(0, 0, 0, 0.15); /* Add text shadow for styling */
}

/* Style for the cart total element */
.cart-total {
    display: none; /* Hidden by default */
    font-weight: bold; /* Set font weight */
    padding: 20px; /* Add padding */
    font-size: 20px; /* Set font size */
}

/* Style for the notification banner element */
.notification-banner {
    display: none; /* Hidden by default */
    position: fixed; /* Fixed positioning at the top */
    top: 0; /* Align to the top of the viewport */
    left: 0; /* Align to the left of the viewport */
    right: 0; /* Align to the right of the viewport */
    background-color: #762929; /* Background color */
    color: white; /* Text color */
    text-align: center; /* Center-align text */
    padding: 10px; /* Add padding */
    z-index: 1000; /* High z-index to show on top */
    transition: opacity 0.5s ease-in-out; /* Transition for fade effect */
}

/* Style for the checkout box */
.checkout-box {
    display: block; /* Display as a block element */
    padding: 0 0 0 30px; /* Apply left padding */
}

/* Style for the checkout button */
#checkout-button {
    display: none; /* Initially hidden */
    padding: 10px; /* Add padding */
    font-size: 15px; /* Set font size */
    font-weight: bold; /* Set font weight */
    transition: all 0.2s ease; /* Transition effect on hover */
}

/* Style for the checkout button on hover */
#checkout-button:hover {
    background-color: #f8e3e3; /* Change background color on hover */
}

/* Style for the dropdown toggle */
.dropdown-toggle {
    font-size: 16px; /* Smaller font size */
    padding: 0.375rem 0.75rem; /* Reduced padding */
    color: red; /* Text color */
    background-color: transparent; /* No background */
    border: none; /* No border */
    display: flex; /* Display as flex container */
    align-items: center; /* Center-align items vertically */
}

  
/* Style for the dropdown menu */
.dropdown-menu {
    font-size: 14px; /* Smaller font size */
    right: 0; /* Align the dropdown menu to the right */
}

/* Remove padding around the user display in the dropdown toggle */
#user-display {
    padding: 0; /* Remove padding */
    margin-right: 0.4rem; /* Add margin before the dropdown arrow */
}

/* Optionally, reduce the top and bottom padding of the dropdown items if needed */
.dropdown-item {
    padding: 0.25rem 1rem; /* Reduced padding for dropdown items */
}

/* Style for the banner image */
.banner {
    object-fit: cover; /* Scale and cover the image */
    height: 700px; /* Set a fixed height */
    width: 100%; /* Set width to 100% */
    overflow: hidden; /* Hide overflowing content */
}

/* Style for the main game container */
.game2 {
    display: flex; /* Display as a flex container */
    justify-content: center; /* Horizontally center the content */
    align-items: center; /* Vertically center the content */
    min-height: 100vh; /* Minimum height of 100% of the viewport */
    padding: 50px; /* Add some padding around */
    box-sizing: border-box; /* Include padding in the width and height calculations */
}

/* If you have specific rows for the game and the instructions */
.game2 .row {
    width: 100%; /* Set the width to 100% */
    max-width: 1200px; /* Adjust the max width as per your design */
    margin: auto; /* Center the row horizontally if content is smaller than max-width */
}


/* Flex settings for the columns if they are not already set */
.game2 .col-md-6 {
    display: flex; /* Display as a flex container */
    flex-direction: column; /* Stack children vertically */
    justify-content: center; /* Center children vertically in the column */
    align-items: start; /* Center children horizontally in the column */
}

/* Ensure the snake game container takes the full width in its column */
.snake-container {
    width: 100%;
}

/* Center the game details text */
.game-details {
    justify-content: center; /* Center the content horizontally */
}

/* Style for the snake game container */
.snake-container {
    display: flex; /* Display as a flex container */
    justify-content: center; /* Horizontally center the content */
    align-items: center; /* Vertically center the content */
    margin-top: 50px; /* Add top margin */
    width: 100%; /* Set width to 100% */
    margin: 0 auto; /* Center the container horizontally */
}

/* Style for the snake game */
.snake {
    width: 65vmin; /* Set width based on the viewport size */
    height: 70vmin; /* Set height based on the viewport size */
    display: flex; /* Display as a flex container */
    overflow: hidden; /* Hide overflowing content */
    flex-direction: column; /* Stack children vertically */
    justify-content: center; /* Center children vertically */
    border-radius: 5px; /* Add border radius */
    background: #1f2b3f; /* Background color */
    box-shadow: 0 20px 40px rgba(52, 87, 220, 0.2); /* Add box shadow */
}

/* Style for the game details text */
.game-details {
    color: #a3abb7; /* Text color */
    font-weight: 500; /* Set font weight */
    font-size: 1.2rem; /* Set font size */
    padding: 20px 27px; /* Add padding */
    display: flex; /* Display as a flex container */
    justify-content: space-between; /* Space elements evenly */
}

/* Style for the play board */
.play-board {
    height: 100%; /* Set height to 100% of the parent container */
    width: 100%; /* Set width to 100% of the parent container */
    display: grid; /* Display as a grid container */
    background: #010101; /* Background color */
    grid-template: repeat(30, 1fr) / repeat(30, 1fr); /* Define the grid layout */
}

/* Style for the food element in the play board */
.play-board .food {
    background: #ff0000; /* Red background color for food */
    animation: pulse 1s infinite; /* Apply a pulsating animation */
}

/* Style for the head element in the play board */
.play-board .head {
    background: #ffff0a; /* Yellow background color for the head */
}

/* Style for the controls container */
.controls {
    display: none; /* Initially hidden */
    justify-content: space-between; /* Space elements evenly */
}

/* Style for the control icons */
.controls i {
    padding: 25px 0; /* Add padding */
    text-align: center; /* Center-align text */
    font-size: 1.3rem; /* Set font size */
    color: #B8C6DC; /* Text color */
    width: calc(100% / 4); /* Divide the width equally */
    cursor: pointer; /* Change cursor on hover */
    border-right: 1px solid #171B26; /* Add a right border */
}

/* Style for the head and body elements in the play board */
.play-board .head,
.play-board .body {
    transition: transform 0.1s; /* Apply a transform transition */
}

/* Style for the game2 background */
.gamebg {
    background-image: url('photos/game2bg.jpg'); /* Set background image */
    background-size: cover; /* Scale and cover the background */
    background-position: center; /* Center-align the background image */
    background-repeat: no-repeat; /* Prevent background image repetition */
    background-attachment: scroll; /* Allow scrolling background */
}

/* Style for the game3 background  */
.gamebg3 {
    background-image: url(photos/game2bg.jpg); /* Set background image */
    background-size: cover; /* Scale and cover the background */
    background-position: center; /* Center-align the background image */
    background-repeat: no-repeat; /* Prevent background image repetition */
}

/* Style for the Flappy Bird container */
.flappy-container {
    font-family: 'Pacifico'; /* Set font family */
    margin-top: 100px; /* Add top margin */
}

/* Style for the canvas element */
canvas {
    border: 1px solid #000; /* Add a border */
    display: block; /* Display as a block element */
    margin: 0 auto; /* Center the canvas horizontally */
}

/* Media query for screens with a maximum width of 991px */
@media(max-width: 991px){

    /* Style for the sidebar */
    .sidebar{
        background-color: rgba(0, 0, 0, 0.15); /* Set a semi-transparent background color */
        backdrop-filter: blur(10px); /* Apply a blur effect to the background */
    }
    
    /* Style for nav-links inside the offcanvas-body */
    .offcanvas-body .nav-link {
        color: rgb(255, 255, 255) !important; /* Set link color to white */
    }

    /* Style for elements with the class "text-lg-white" */
    .text-lg-white {
        color: white !important; /* Set text color to white */
    }

    /* Style for the game container */
    .game-container {
        width: 90vmin; /* Set width to 90% of the viewport width */
        height: 115vmin; /* Set height to 115% of the viewport width */
    }

    /* Style for the game info */
    .game-info {
        font-size: 1rem; /* Set font size to 1rem */
        padding: 15px 27px; /* Add padding to the game info */
    }

    /* Style for game controls */
    .game-controls {
        display: flex; /* Display game controls as a flex container */
    }

    /* Style for control buttons within game controls */
    .game-controls .control-btn {
        padding: 15px 0; /* Add padding to control buttons */
        font-size: 1rem; /* Set font size to 1rem */
    }
}

/* Keyframes animation named "pulse" */
@keyframes pulse {
    /* Keyframe at 0% */
    0% {
        transform: scale(1); /* Initial scale */
        opacity: 1; /* Initial opacity */
    }

    /* Keyframe at 50% */
    50% {
        transform: scale(1.1); /* Scale up */
        opacity: 0.7; /* Reduced opacity */
    }

    /* Keyframe at 100% */
    100% {
        transform: scale(1); /* Return to initial scale */
        opacity: 1; /* Return to initial opacity */
    }
}

/* Media query for viewport widths up to 1920px */
@media(max-width: 1920px) {
    /* Adjust the right positioning of the element with ID 'cart-item-count' */
    #cart-item-count {
        right: 26.1vw; /* Move it 26.1% of the viewport width from the right */
    }
}

/* Media query for viewport widths up to 1690px but greater than 1920px */
@media(max-width: 1690px) {
    /* Adjust the right positioning of the element with ID 'cart-item-count' */
    #cart-item-count {
        right: 23.0vw; /* Move it 23.0% of the viewport width from the right */
    }
}

/* Media query for viewport widths up to 1512px but greater than 1690px */
@media(max-width: 1512px) {
    /* Adjust the right positioning of the element with ID 'cart-item-count' */
    #cart-item-count {
        right: 19.8vw; /* Move it 19.8% of the viewport width from the right */
    }
}

/* Media query for viewport widths up to 600px */
@media(max-width: 600px) {
    /* Adjust the right positioning of the element with ID 'cart-item-count' */
    #cart-item-count {
        right: 30.1vw; /* Move it 30.1% of the viewport width from the right */
        background-color: rgb(255, 255, 255); /* Change background color to white */
        color: rgb(0, 0, 0); /* Change text color to black */
    }

    /* Apply styles when the user is logged in */
    #cart-item-count.user-logged-in {
        right: 30.1vw; /* Adjusted position when user is logged in */
    }

    /* Adjust styles for a background image */
    .gamebg {
        min-height: 100vh; /* Minimum height of 100% of the viewport */
        background-attachment: fixed; /* Optional: Fix the background */
        overflow-y: scroll; /* Enable vertical scrolling if needed */
    }

    /* Adjust styles for a container with class 'snake-container' */
    .snake-container {
        max-width: 90vw; /* Use 90% of the viewport width */
        height: 90vw; /* Use the same value for height to maintain aspect ratio */
    }

    /* Adjust styles for a container with class 'top-row' */
    .top-row {
        flex-direction: column; /* Change flex direction to column */
    }

    /* Adjust margin for elements with class 'category' within 'top-row' */
    .top-row .category {
        margin-bottom: 20px; /* Add margin below each category element */
    }
   
}

/* Media query for viewport widths greater than or equal to 600px */
@media (min-width: 600px) {
    /* Adjust the alignment of elements within 'image-gallery' */
    .image-gallery {
        justify-content: space-around; /* Space elements evenly around the container */
    }

    /* Allow the 'image-container' with class 'bottom' to maintain its size */
    .image-container.bottom {
        flex: 0 0 auto; /* Allows the container to maintain its size */
    }
}